name: Test - Install Packages (local)
on:
  workflow_call:
  workflow_dispatch:  # to trigger manually

permissions:
  contents: read

jobs:
  click:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        package-version: [
          '8.3.0',
          '8.2.1',
          '8.1.8',
          '8.1.0',
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true

      - name: Install packages
        run: |
          uv pip install pytest

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'click'
          package-version: ${{ matrix.package-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  jax:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        package-version: [
          0.7.0,
          0.6.2,
          0.6.0,
          0.5.3,
          0.4.38,
          0.4.1,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true

      - name: Install packages
        run: |
          uv pip install pytest

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'jax'
          package-version: ${{ matrix.package-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run functional tests
        run: |
          python -m pytest tests/functional



  matplotlib:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        package-version: [
          3.10.5,
          3.9.4,
          3.8.4,
          3.7.5,
          3.6.3,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true

      - name: Install packages
        run: |
          uv pip install pytest

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'matplotlib'
          package-version: ${{ matrix.package-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        package-version: [
          2.3.2,
          2.2.6,
          2.1.1,
          2.0.2,
          1.26.4,
          1.25.2,
          1.24.3,
          1.23.5,
          1.22.4,
          1.21.6,
          1.20.3,
          1.20.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true

      - name: Install packages
        run: |
          uv pip install pytest

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'numpy'
          package-version: ${{ matrix.package-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run functional tests
        run: |
          python -m pytest tests/functional
